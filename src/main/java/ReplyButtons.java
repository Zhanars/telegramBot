import com.vdurmont.emoji.EmojiParser;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;

import java.util.ArrayList;
import java.util.List;

public class ReplyButtons {
    //knopka v klave
    public static void firstButtons(SendMessage sendMessage) {
        ReplyKeyboardMarkup replyKeyboardMarkup = new ReplyKeyboardMarkup();
        sendMessage.setReplyMarkup(replyKeyboardMarkup);
        replyKeyboardMarkup.setSelective(true);
        replyKeyboardMarkup.setResizeKeyboard(true);
        replyKeyboardMarkup.setOneTimeKeyboard(true);
        List<KeyboardRow> keyboardRowList = new ArrayList<KeyboardRow>();
        KeyboardRow keyboardFirstRow = new KeyboardRow();
        KeyboardRow keyboardSecondRow = new KeyboardRow();
        KeyboardRow keyboardThirdRow = new KeyboardRow();
        keyboardFirstRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":school:–ò–ü–ö –£–Ω–∏–≤–µ—Ä")));
        keyboardFirstRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":clock830:–ö–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞")));
        keyboardFirstRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":clipboard:–û–ø—Ä–æ—Å—ã")));
        keyboardSecondRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":bar_chart:–†–µ–π—Ç–∏–Ω–≥")));
        keyboardSecondRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":newspaper:–î–ª—è –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤")));
        keyboardSecondRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":telephone_receiver:–ö–æ–Ω—Ç–∞–∫—Ç—ã")));
        keyboardThirdRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":email:–ë–ª–æ–≥ —Ä–µ–∫—Ç–æ—Ä–∞")));
        keyboardThirdRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":man_student: :woman_student:–°–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π")));
        keyboardRowList.add(keyboardFirstRow);
        keyboardRowList.add(keyboardSecondRow);
        keyboardRowList.add(keyboardThirdRow);
        replyKeyboardMarkup.setKeyboard(keyboardRowList);
    }
    public static void UniverButtons(SendMessage sendMessage) {
        ReplyKeyboardMarkup replyKeyboardMarkup = new ReplyKeyboardMarkup();
        sendMessage.setReplyMarkup(replyKeyboardMarkup);
        replyKeyboardMarkup.setSelective(true);
        replyKeyboardMarkup.setResizeKeyboard(true);
        replyKeyboardMarkup.setOneTimeKeyboard(true);
        List<KeyboardRow> keyboardRowList = new ArrayList<KeyboardRow>();
        KeyboardRow keyboardFirstRow = new KeyboardRow();
        KeyboardRow keyboardSecondRow = new KeyboardRow();
        KeyboardRow keyboardThirdRow = new KeyboardRow();
        KeyboardRow keyboardFourthRow = new KeyboardRow();
        KeyboardRow keyboardFifthRow = new KeyboardRow();
        KeyboardRow keyboardSixthRow = new KeyboardRow();
        if (telegrambotsql.getStatus(sendMessage.getChatId()) == 1){
            keyboardFirstRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":100:–¢–µ–∫—É—â–∏–µ –æ—Ü–µ–Ω–∫–∏")));
            keyboardFirstRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":bookmark:–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç")));
            keyboardSecondRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":moneybag:–ó–∞–¥–æ–ª–∂–Ω–æ—Å—Ç—å –ø–æ –æ–ø–ª–∞—Ç–µ")));
            keyboardThirdRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":world_map:–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π")));
            keyboardThirdRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":world_map:–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —ç–∫–∑–∞–º–µ–Ω–æ–≤")));
            keyboardFourthRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":file_folder:–£–ú–ö–î")));
            keyboardFourthRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":spiral_calendar_pad:–ö–∞–ª–µ–Ω–¥–∞—Ä—å")));
            keyboardFifthRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":telephone_receiver:–ö–æ–Ω—Ç–∞–∫—Ç—ã —ç–¥–≤–∞–π–∑–µ—Ä–∞")));
            keyboardFifthRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":key:")+"–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è"));
            keyboardSixthRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":rewind:–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é")));
        }else{

            keyboardFirstRow.add(new KeyboardButton("/bla person"));
            keyboardFirstRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":rewind:–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é")));
        }
        keyboardRowList.add(keyboardFirstRow);
        keyboardRowList.add(keyboardSecondRow);
        keyboardRowList.add(keyboardThirdRow);
        keyboardRowList.add(keyboardFourthRow);
        keyboardRowList.add(keyboardFifthRow);
        keyboardRowList.add(keyboardSixthRow);
        replyKeyboardMarkup.setKeyboard(keyboardRowList);
    }
    public static void SKUDButtons(SendMessage sendMessage) {
        ReplyKeyboardMarkup replyKeyboardMarkup = new ReplyKeyboardMarkup();
        sendMessage.setReplyMarkup(replyKeyboardMarkup);
        replyKeyboardMarkup.setSelective(true);
        replyKeyboardMarkup.setResizeKeyboard(true);
        replyKeyboardMarkup.setOneTimeKeyboard(true);
        List<KeyboardRow> keyboardRowList = new ArrayList<KeyboardRow>();
        KeyboardRow keyboardFirstRow = new KeyboardRow();
        KeyboardRow keyboardSecondRow = new KeyboardRow();
        keyboardFirstRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":date:–í—ã–ø–∏—Å–∫–∞ –Ω–∞ –º–µ—Å—è—Ü")));
        keyboardFirstRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":date:–í—ã–ø–∏—Å–∫–∞ –Ω–∞ –ø—Ä–æ—à–ª—ã–π –º–µ—Å—è—Ü")));
        keyboardSecondRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":rewind:–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é")));
        keyboardRowList.add(keyboardFirstRow);
        keyboardRowList.add(keyboardSecondRow);
        replyKeyboardMarkup.setKeyboard(keyboardRowList);
    }
    public static void CodeButtons(SendMessage sendMessage) {
        ReplyKeyboardMarkup replyKeyboardMarkup = new ReplyKeyboardMarkup();
        sendMessage.setReplyMarkup(replyKeyboardMarkup);
        replyKeyboardMarkup.setSelective(true);
        replyKeyboardMarkup.setResizeKeyboard(true);
        replyKeyboardMarkup.setOneTimeKeyboard(true);
        List<KeyboardRow> keyboardRowList = new ArrayList<KeyboardRow>();
        KeyboardRow keyboardFirstRow = new KeyboardRow();

        if (telegrambotsql.getStatus(sendMessage.getChatId()) == 1){
            keyboardFirstRow.add(new KeyboardButton("fd"));
            keyboardFirstRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":rewind:–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é")));
        }else{
            keyboardFirstRow.add(new KeyboardButton("/bla person"));
            keyboardFirstRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":rewind:–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é")));
        }
        keyboardRowList.add(keyboardFirstRow);
        replyKeyboardMarkup.setKeyboard(keyboardRowList);
    }

    public static void zeroButtons(SendMessage sendMessage) {
        ReplyKeyboardMarkup replyKeyboardMarkup = new ReplyKeyboardMarkup();
        sendMessage.setReplyMarkup(replyKeyboardMarkup);
        replyKeyboardMarkup.setSelective(true);
        replyKeyboardMarkup.setResizeKeyboard(true);
        replyKeyboardMarkup.setOneTimeKeyboard(true);
        List<KeyboardRow> keyboardRowList = new ArrayList<KeyboardRow>();
        KeyboardRow keyboardFirstRow = new KeyboardRow();
        KeyboardRow keyboardSecondRow = new KeyboardRow();
        KeyboardRow keyboardThirdRow = new KeyboardRow();
        keyboardSecondRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":newspaper:–î–ª—è –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤")));
        keyboardSecondRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":telephone_receiver:–ö–æ–Ω—Ç–∞–∫—Ç—ã")));
        keyboardRowList.add(keyboardFirstRow);
        keyboardRowList.add(keyboardSecondRow);
        keyboardRowList.add(keyboardThirdRow);
        replyKeyboardMarkup.setKeyboard(keyboardRowList);
    }
    public static void abiturientButtons(SendMessage sendMessage) {
        ReplyKeyboardMarkup replyKeyboardMarkup = new ReplyKeyboardMarkup();
        sendMessage.setReplyMarkup(replyKeyboardMarkup);
        replyKeyboardMarkup.setSelective(true);
        replyKeyboardMarkup.setResizeKeyboard(true);
        replyKeyboardMarkup.setOneTimeKeyboard(true);
        List<KeyboardRow> keyboardRowList = new ArrayList<KeyboardRow>();
        KeyboardRow keyboardFirstRow = new KeyboardRow();
        KeyboardRow keyboardSecondRow = new KeyboardRow();
        KeyboardRow keyboardThirdRow = new KeyboardRow();
        keyboardFirstRow.add(new KeyboardButton("üì∞–ë—É–∫–ª–µ—Ç"));
        keyboardFirstRow.add(new KeyboardButton("\uD83C\uDFAC–í–∏–¥–µ–æ"));
        keyboardSecondRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":rewind:–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é")));
        keyboardRowList.add(keyboardFirstRow);
        keyboardRowList.add(keyboardSecondRow);
        keyboardRowList.add(keyboardThirdRow);
        replyKeyboardMarkup.setKeyboard(keyboardRowList);
    }
    public static void ratingButtons(SendMessage sendMessage) {
        ReplyKeyboardMarkup replyKeyboardMarkup = new ReplyKeyboardMarkup();
        sendMessage.setReplyMarkup(replyKeyboardMarkup);
        replyKeyboardMarkup.setSelective(true);
        replyKeyboardMarkup.setResizeKeyboard(true);
        replyKeyboardMarkup.setOneTimeKeyboard(true);
        List<KeyboardRow> keyboardRowList = new ArrayList<KeyboardRow>();
        KeyboardRow keyboardFirstRow = new KeyboardRow();
        KeyboardRow keyboardSecondRow = new KeyboardRow();
        KeyboardRow keyboardThirdRow = new KeyboardRow();
        KeyboardRow keyboardFourthRow = new KeyboardRow();
        keyboardFirstRow.add(new KeyboardButton("–ü–æ –∫—É—Ä—Å—É"));
        keyboardSecondRow.add(new KeyboardButton("–ü–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É"));
        keyboardThirdRow.add(new KeyboardButton("–ü–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏"));
        keyboardFourthRow.add(new KeyboardButton(EmojiParser.parseToUnicode(":rewind:–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é")));
        keyboardRowList.add(keyboardFirstRow);
        keyboardRowList.add(keyboardSecondRow);
        keyboardRowList.add(keyboardThirdRow);
        keyboardRowList.add(keyboardFourthRow);
        replyKeyboardMarkup.setKeyboard(keyboardRowList);
    }
}
